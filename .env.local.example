# Database Configuration
# Using Neon Database (https://neon.tech)

# For Prisma (uses connection pooling) - Get this from Neon dashboard > Connection Details > Pooled connection
POSTGRES_PRISMA_URL="psql 'postgresql://neondb_owner:npg_act6dpR5bTkX@ep-long-firefly-afpmwm2c-pooler.c-2.us-west-2.aws.neon.tech/neondb?sslmode=require&channel_binding=require'"

# For migrations (direct connection) - Get this from Neon dashboard > Connection Details > Direct connection
POSTGRES_URL_NON_POOLING="postgresql://[user]:[password]@[host]/[database]?sslmode=require"

# Optional: Individual components (if needed by other tools)
POSTGRES_USER="************"
POSTGRES_HOST="************"
POSTGRES_PASSWORD="************"
POSTGRES_DATABASE="************"

# Note: When deploying to Vercel, add these same environment variables to your Vercel project settings

# AI Provider - OpenRouter (recommended for MVP)
# Get your API key from: https://openrouter.ai/keys
# OpenRouter provides access to 100+ models through one API key
OPENROUTER_API_KEY="sk-or-..."

# Optional: Default model to use (can be changed in code)
# Popular choices: openai/gpt-4-turbo, anthropic/claude-3-sonnet, google/gemini-pro
DEFAULT_MODEL="anthropic/claude-3-5-sonnet-20241022"

# Alternative: Direct provider keys (if you prefer not to use OpenRouter)
# OPENAI_API_KEY="sk-..."
# ANTHROPIC_API_KEY="sk-ant-..."
# GOOGLE_GENERATIVE_AI_API_KEY="..."